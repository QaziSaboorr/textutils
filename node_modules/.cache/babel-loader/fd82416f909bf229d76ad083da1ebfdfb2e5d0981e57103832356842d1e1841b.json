{"ast":null,"code":"var _jsxFileName = \"/Users/saboorali/Desktop/summer 2023/webDev/textutils/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Test from \"./Test\";\nimport { Routes, Route, Router } from \"react-router-dom\";\n\n// import { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); //whether dark mood unabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mood has been enabled\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1e0b69\";\n      showAlert(\"Dark mood has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        aboutText: \"About\",\n        mode: mode,\n        toggle: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Text to test\",\n            mode: mode,\n            Showalert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\n\n// {/* <Router>\n//   <Navbar\n//     title=\"TextUtils\"\n//     aboutText=\"About\"\n//     mode={mode}\n//     toggle={toggleMode}\n//   />\n//   <Alert alert={alert} />\n//   <div className=\"container my-3\">\n//     <Switch>\n//       <Route path=\"/about\">\n//         <About />\n//       </Route>\n//       <Route path=\"/dummy\">\n//         <Test />\n//       </Route>\n//       <Route path=\"/\">\n//         <TextForm\n//           heading=\"Text to test\"\n//           mode={mode}\n//           Showalert={showAlert}\n//         />\n//       </Route>\n//     </Switch>\n//   </div>\n//   <footer id=\"customFooter\">Coded by Qazi Saboor</footer>\n// </Router> */}\n// // <BrowserRouter>\n// //   <Routes>\n// //     <Navbar\n// //       title=\"TextUtils\"\n// //       aboutText=\"About\"\n// //       mode={mode}\n// //       toggle={toggleMode}\n// //     />\n// //     <Alert alert={alert} />\n// //     <Route path=\"/\">\n// //       element =\n// //       {\n// //         <TextForm\n// //           heading=\"Text to test\"\n// //           mode={mode}\n// //           Showalert={showAlert}\n// //         />\n// //       }\n// //     </Route>\n// //     <Route path=\"/about\">element = {<About />}</Route>\n// //   </Routes>\n// // </BrowserRouter>\n\n// <>\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","TextForm","About","useState","Alert","Test","Routes","Route","Router","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","toggle","fileName","_jsxFileName","lineNumber","columnNumber","path","element","heading","Showalert","_c","$RefreshReg$"],"sources":["/Users/saboorali/Desktop/summer 2023/webDev/textutils/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport Test from \"./Test\";\nimport { Routes, Route, Router } from \"react-router-dom\";\n\n// import { Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether dark mood unabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    setTimeout(() => setAlert(null), 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mood has been enabled\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1e0b69\";\n      showAlert(\"Dark mood has been enabled\", \"success\");\n    }\n  };\n  return (\n    <Router>\n      <div>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About\"\n          mode={mode}\n          toggle={toggleMode}\n        />\n\n        <Alert alert={alert} />\n        {/* Render the Navbar component */}\n        <Routes>\n          {/* Define routes */}\n          <Route\n            path=\"/\"\n            element={\n              <TextForm\n                heading=\"Text to test\"\n                mode={mode}\n                Showalert={showAlert}\n              />\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// {/* <Router>\n//   <Navbar\n//     title=\"TextUtils\"\n//     aboutText=\"About\"\n//     mode={mode}\n//     toggle={toggleMode}\n//   />\n//   <Alert alert={alert} />\n//   <div className=\"container my-3\">\n//     <Switch>\n//       <Route path=\"/about\">\n//         <About />\n//       </Route>\n//       <Route path=\"/dummy\">\n//         <Test />\n//       </Route>\n//       <Route path=\"/\">\n//         <TextForm\n//           heading=\"Text to test\"\n//           mode={mode}\n//           Showalert={showAlert}\n//         />\n//       </Route>\n//     </Switch>\n//   </div>\n//   <footer id=\"customFooter\">Coded by Qazi Saboor</footer>\n// </Router> */}\n// // <BrowserRouter>\n// //   <Routes>\n// //     <Navbar\n// //       title=\"TextUtils\"\n// //       aboutText=\"About\"\n// //       mode={mode}\n// //       toggle={toggleMode}\n// //     />\n// //     <Alert alert={alert} />\n// //     <Route path=\"/\">\n// //       element =\n// //       {\n// //         <TextForm\n// //           heading=\"Text to test\"\n// //           mode={mode}\n// //           Showalert={showAlert}\n// //         />\n// //       }\n// //     </Route>\n// //     <Route path=\"/about\">element = {<About />}</Route>\n// //   </Routes>\n// // </BrowserRouter>\n\n// <>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}