{"ast":null,"code":"var _jsxFileName = \"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"Enter your text here\");\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const WordCount = text => {\n    wordUpdated(text.split(\" \").length);\n  };\n  const clearText = () => {\n    setText(\"\");\n    wordUpdated(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleOnChange,\n          className: \"form-control\",\n          value: text,\n          id: \"my-Box\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary my-3 mx-3\",\n        onClick: handleUpClick,\n        children: \"Convert to uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary my-3 \",\n        onClick: () => clearText(),\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Words \", intialWord, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of characters \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"HjFVQuMDzkwHZATNvPUwueZaW8o=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleUpClick","newText","toUpperCase","handleOnChange","event","target","value","WordCount","wordUpdated","split","length","clearText","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","intialWord","_c","$RefreshReg$"],"sources":["/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"Enter your text here\");\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const WordCount = (text) => {\n    wordUpdated(text.split(\" \").length);\n  };\n\n  const clearText = () => {\n    setText(\"\");\n    wordUpdated(0);\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <h1>{props.heading}</h1>\n\n        <div className=\"form-group\">\n          <textarea\n            onChange={handleOnChange}\n            className=\"form-control\"\n            value={text}\n            id=\"my-Box\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary my-3 mx-3\" onClick={handleUpClick}>\n          Convert to uppercase\n        </button>\n\n        <button className=\"btn btn-primary my-3 \" onClick={() => clearText()}>\n          Clear Text\n        </button>\n      </div>\n      <div className=\"container mx-3\">\n        <h3>Your text Summary</h3>\n        <p>Number of Words {intialWord} </p>\n        <p>Number of characters {text.length}</p>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}