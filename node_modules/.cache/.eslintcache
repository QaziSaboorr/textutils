[{"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/index.js":"1","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/App.js":"2","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/reportWebVitals.js":"3","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/Navbar.js":"4","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/TextForm.js":"5","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/About.js":"6","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/Alert.js":"7"},{"size":535,"mtime":1685849945344,"results":"8","hashOfConfig":"9"},{"size":1317,"mtime":1686031838251,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1685849945344,"results":"11","hashOfConfig":"9"},{"size":2452,"mtime":1686030519955,"results":"12","hashOfConfig":"9"},{"size":4467,"mtime":1686031530785,"results":"13","hashOfConfig":"9"},{"size":5349,"mtime":1685948178700,"results":"14","hashOfConfig":"9"},{"size":502,"mtime":1686031731543,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a7l3f0",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/index.js",[],[],"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/App.js",["38"],[],"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/reportWebVitals.js",[],[],"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/Navbar.js",[],[],"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/TextForm.js",[],[],"/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/About.js",["39"],[],"import React, { useSyncExternalStore } from \"react\";\nimport { useState } from \"react\";\n\nexport default function About() {\n  const [myStyle, setMyStyle] = useState({\n    color: \"white\",\n    backgroundColor: \"black\",\n    border: \"1px solid white\",\n  });\n  const [btntext, setbtntext] = useState(\"Enable Dark Mood\");\n\n  const toggleStyle = () => {\n    if (myStyle.color === \"white\") {\n      setMyStyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n        border: \"1px solid black\",\n      });\n\n      setbtntext(\"Enable Dark Mood\");\n    } else {\n      setMyStyle({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"1px solid white\",\n      });\n\n      setbtntext(\"Enable Light Mood\");\n    }\n  };\n\n  return (\n    <div className=\"container\" style={myStyle}>\n      <h2 className=\"my-3\">About us</h2>\n      <div className=\"accordion\" id=\"accordionExample\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n              style={myStyle}\n            >\n              Accordion Item #1\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={myStyle}>\n              <strong>This is the first item's accordion body.</strong> It is\n              shown by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n              style={myStyle}\n            >\n              Accordion Item #2\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={myStyle}>\n              <strong>This is the second item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={myStyle}>\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n              style={myStyle}\n            >\n              Accordion Item #3\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={myStyle}>\n              <strong>This is the third item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classNamees that we use to style each element. These classNamees\n              control the overall appearance, as well as the showing and hiding\n              via CSS transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container my-3\">\n        <button\n          onClick={toggleStyle}\n          type=\"button\"\n          className=\"my-3 btn btn-primary\"\n        >\n          {btntext}\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/saboorali/Desktop/summer 2023/webDev/react-harry/textutils/src/components/Alert.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":13},{"ruleId":"40","severity":1,"message":"44","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":37},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'useSyncExternalStore' is defined but never used."]